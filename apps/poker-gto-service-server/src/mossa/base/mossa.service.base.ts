/*
------------------------------------------------------------------------------ 
This code was generated by Amplication. 
 
Changes to this file will be lost if the code is regenerated. 

There are other ways to to customize your code, see this doc to learn more
https://docs.amplication.com/how-to/custom-code

------------------------------------------------------------------------------
  */
import { PrismaService } from "../../prisma/prisma.service";

import {
  Prisma,
  Mossa as PrismaMossa,
  Mano as PrismaMano,
  Giocatore as PrismaGiocatore,
} from "@prisma/client";

import { AddMossaDto } from "../AddMossaDto";

export class MossaServiceBase {
  constructor(protected readonly prisma: PrismaService) {}

  async count(args: Omit<Prisma.MossaCountArgs, "select">): Promise<number> {
    return this.prisma.mossa.count(args);
  }

  async mossas(args: Prisma.MossaFindManyArgs): Promise<PrismaMossa[]> {
    return this.prisma.mossa.findMany(args);
  }
  async mossa(args: Prisma.MossaFindUniqueArgs): Promise<PrismaMossa | null> {
    return this.prisma.mossa.findUnique(args);
  }
  async createMossa(args: Prisma.MossaCreateArgs): Promise<PrismaMossa> {
    return this.prisma.mossa.create(args);
  }
  async updateMossa(args: Prisma.MossaUpdateArgs): Promise<PrismaMossa> {
    return this.prisma.mossa.update(args);
  }
  async deleteMossa(args: Prisma.MossaDeleteArgs): Promise<PrismaMossa> {
    return this.prisma.mossa.delete(args);
  }

  async getMano(parentId: string): Promise<PrismaMano | null> {
    return this.prisma.mossa
      .findUnique({
        where: { id: parentId },
      })
      .mano();
  }

  async getGiocatore(parentId: string): Promise<PrismaGiocatore | null> {
    return this.prisma.mossa
      .findUnique({
        where: { id: parentId },
      })
      .giocatore();
  }
  async AddMossa(args: AddMossaDto): Promise<string> {
    throw new Error("Not implemented");
  }
}
